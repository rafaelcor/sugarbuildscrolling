#!/usr/bin/env python2.7

import argparse
import os
import shutil
import subprocess
from contextlib import contextmanager
import sys

import common

from osbuild import run
from osbuild import check
from osbuild import main
from osbuild import command


@contextmanager
def _setup_profile(log_name):
    log_path = os.path.join(common.logs_dir, "%s.log" % log_name)

    try:
        os.unlink(log_path)
    except OSError:
        pass

    os.environ["SUGAR_TEST_LOG"] = log_path

    profile_path = os.path.expandvars("$SUGAR_HOME/check")
    shutil.rmtree(profile_path, ignore_errors=True)

    try:
        yield
    finally:
        logs_dir = os.path.join(profile_path, "logs")
        run.collect_logs(logs_dir, log_path)


def _run_smoketest():
    print("* Running smoke test")

    test_command = "python -u %s" % os.path.join(common.build_dir,
                                                 "tests", "shell.py")

    os.environ["SUGAR_RUN_TEST"] = test_command

    result = True
    try:
        command.run(["sugar-runner"])
    except subprocess.CalledProcessError:
        result = False

    return result


parser = argparse.ArgumentParser()
parser.add_argument("module", nargs="?", help="name of the module to test")
args = parser.parse_args()

os.environ["GTK_MODULES"] = "gail:atk-bridge"
os.environ["SUGAR_LOGGER_LEVEL"] = "debug"
os.environ["SUGAR_PROFILE"] = "check"
os.environ["SUGAR_PROFILE_NAME"] = "dummy"
os.environ["SUGAR_RUNNER_VIRTUAL"] = "yes"

common.setup()

if args.module is None:
    if not main.run_build():
        sys.exit(1)

print("\n= Check =\n")

if args.module == "smoketest" or args.module is None:
    with _setup_profile("check-smoketest"):
        result = _run_smoketest()

    if not result:
        sys.exit(1)

if args.module is not None and args.module != "smoketest":
    with _setup_profile("check-modules"):
        result = check.check_one(args.module)

    if not result:
        sys.exit(1)

if args.module is None:
    with _setup_profile("check-modules"):
        result = check.check()

    if not result:
        sys.exit(1)
